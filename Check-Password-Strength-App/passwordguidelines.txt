OWASP (Open Web Application Security Project)
Guidelines for creating a strong password:
Password length - passwords are at least 12 characters long (the longer the better)
A mixture of upper and lower case letters numbers and special characters
Avoid common passwords such as qwerty, admin, password, password123, 123456 etc.(need a list of at least 10)

---------

Very Strong
Length: At least 12 characters.
Complexity: Includes uppercase letters, lowercase letters, numbers, and special characters.
No Common Passwords: Avoid common passwords like "password123" or "qwerty".
No Personal Information: Does not contain easily guessable information like names or birthdates.

Strong
Length: At least 10 characters.
Complexity: Includes at least three of the following: uppercase letters, lowercase letters, numbers, and special characters.
No Common Passwords: Avoid common passwords.
No Personal Information: Does not contain easily guessable information.

Moderate
Length: At least 8 characters.
Complexity: Includes at least two of the following: uppercase letters, lowercase letters, numbers, and special characters.
No Common Passwords: Avoid common passwords.
No Personal Information: Does not contain easily guessable information.

Weak
Length: 6-7 characters.
Complexity: Includes only letters (either uppercase or lowercase) or only numbers.
Common Passwords: May include common passwords.
Personal Information: May contain easily guessable information.

Very Weak
Length: Less than 6 characters.
Complexity: Only one type of character (letters, numbers, or special characters).
Common Passwords: Likely includes common passwords.
Personal Information: Likely contains easily guessable information.#

---------
Password app checks:

Common passwords to check against
common_passwords = ['password123', 'qwerty', '123456', 'password', '12345678', 'abc123', 'password1']

def check_length(password):
    return len(password)

def check_complexity(password):
has upper case, lower case, digits and/or special character

def grade_password(password):
    length = check_length(password)
    has_upper, has_lower, has_digit, has_special = check_complexity(password)
    is_common = check_common_password(password)
    is_personal = check_personal_info(password)

    if length >= 12 and all([has_upper, has_lower, has_digit, has_special]) and not is_common and not is_personal:
        return "Very Strong"
    elif length >= 10 and sum([has_upper, has_lower, has_digit, has_special]) >= 3 and not is_common and not is_personal:
        return "Strong"
    elif length >= 8 and sum([has_upper, has_lower, has_digit, has_special]) >= 2 and not is_common and not is_personal:
        return "Moderate"
    elif length >= 6 and (has_upper or has_lower or has_digit) and not (has_upper and has_lower and has_digit) and not is_common and not is_personal:
        return "Weak"
        
    else:
        return "Very Weak"


